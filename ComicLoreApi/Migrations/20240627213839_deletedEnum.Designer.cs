// <auto-generated />
using System;
using ComicLoreApi.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComicLoreApi.Migrations
{
    [DbContext(typeof(SupeInfoDbContext))]
    [Migration("20240627213839_deletedEnum")]
    partial class deletedEnum
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComicLoreApi.Entities.Power", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PowerTier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Powers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Ability to fly",
                            Name = "Flight",
                            PowerTier = "A"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Enhanced physical strength",
                            Name = "Super Strength",
                            PowerTier = "S"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Ability to become invisible",
                            Name = "Invisibility",
                            PowerTier = "B"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Use of advanced technology and gadgets",
                            Name = "Gadgets",
                            PowerTier = "C"
                        });
                });

            modelBuilder.Entity("ComicLoreApi.Entities.Supe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Supes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Superman",
                            DateOfBirth = new DateTime(1938, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Clark",
                            LastName = "Kent",
                            Origin = "Krypton"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Batman",
                            DateOfBirth = new DateTime(1939, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bruce",
                            LastName = "Wayne",
                            Origin = "Gotham City"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "Wonder Woman",
                            DateOfBirth = new DateTime(1941, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Diana",
                            LastName = "Prince",
                            Origin = "Themyscira"
                        });
                });

            modelBuilder.Entity("PowerSupe", b =>
                {
                    b.Property<int>("PowersId")
                        .HasColumnType("int");

                    b.Property<int>("SupesId")
                        .HasColumnType("int");

                    b.HasKey("PowersId", "SupesId");

                    b.HasIndex("SupesId");

                    b.ToTable("PowerSupe");
                });

            modelBuilder.Entity("PowerSupe", b =>
                {
                    b.HasOne("ComicLoreApi.Entities.Power", null)
                        .WithMany()
                        .HasForeignKey("PowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComicLoreApi.Entities.Supe", null)
                        .WithMany()
                        .HasForeignKey("SupesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
